
n_line_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000094a  000009de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000094a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000414  0080010c  0080010c  000009ea  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000009ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001670  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00001828  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000109e  00000000  00000000  00001988  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f0  00000000  00000000  00002a26  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b72  00000000  00000000  00003116  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000228  00000000  00000000  00003c88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f9  00000000  00000000  00003eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a7  00000000  00000000  000043a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00004b50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_24>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e4       	ldi	r30, 0x4A	; 74
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	15 e0       	ldi	r17, 0x05	; 5
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 56 01 	call	0x2ac	; 0x2ac <main>
  9e:	0c 94 a3 04 	jmp	0x946	; 0x946 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z16I2C_setCallbacksPFvhEPFvvE>:
static void (*I2C_recv)(uint8_t);
static void (*I2C_req)();

void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)())
{
	I2C_recv = recv;
  a6:	90 93 0d 01 	sts	0x010D, r25
  aa:	80 93 0c 01 	sts	0x010C, r24
	I2C_req = req;
  ae:	70 93 0f 01 	sts	0x010F, r23
  b2:	60 93 0e 01 	sts	0x010E, r22
}
  b6:	08 95       	ret

000000b8 <_Z8I2C_inith>:

void I2C_init(uint8_t address)
{
	cli();
  b8:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
  ba:	88 0f       	add	r24, r24
  bc:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
  c0:	85 ec       	ldi	r24, 0xC5	; 197
  c2:	80 93 bc 00 	sts	0x00BC, r24
	sei();
  c6:	78 94       	sei
}
  c8:	08 95       	ret

000000ca <_Z13I2C_init_synch>:

void I2C_init_sync(uint8_t address)
{
	cli();
  ca:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
  cc:	88 0f       	add	r24, r24
  ce:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
  d2:	84 ec       	ldi	r24, 0xC4	; 196
  d4:	80 93 bc 00 	sts	0x00BC, r24
	sei();
  d8:	78 94       	sei
}
  da:	08 95       	ret

000000dc <_Z8I2C_stopv>:

void I2C_stop(void)
{
	// clear acknowledge and enable bits
	cli();
  dc:	f8 94       	cli
	TWCR = 0;
  de:	10 92 bc 00 	sts	0x00BC, r1
	TWAR = 0;
  e2:	10 92 ba 00 	sts	0x00BA, r1
	sei();
  e6:	78 94       	sei
}
  e8:	08 95       	ret

000000ea <_Z8I2C_mainv>:

void I2C_main()
{
	//é©à∂SLA+RéÛêMÇ‹Ç≈ë“ã@
	while( !(TWCR & (1 << TWINT)));
  ea:	ec eb       	ldi	r30, 0xBC	; 188
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	88 23       	and	r24, r24
  f2:	ec f7       	brge	.-6      	; 0xee <_Z8I2C_mainv+0x4>
	
	switch(TW_STATUS)
  f4:	80 91 b9 00 	lds	r24, 0x00B9
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	88 7f       	andi	r24, 0xF8	; 248
  fc:	90 70       	andi	r25, 0x00	; 0
  fe:	80 38       	cpi	r24, 0x80	; 128
 100:	91 05       	cpc	r25, r1
 102:	69 f0       	breq	.+26     	; 0x11e <_Z8I2C_mainv+0x34>
 104:	81 38       	cpi	r24, 0x81	; 129
 106:	91 05       	cpc	r25, r1
 108:	1c f4       	brge	.+6      	; 0x110 <_Z8I2C_mainv+0x26>
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	29 f1       	breq	.+74     	; 0x158 <_Z8I2C_mainv+0x6e>
 10e:	2a c0       	rjmp	.+84     	; 0x164 <_Z8I2C_mainv+0x7a>
 110:	88 3a       	cpi	r24, 0xA8	; 168
 112:	91 05       	cpc	r25, r1
 114:	79 f0       	breq	.+30     	; 0x134 <_Z8I2C_mainv+0x4a>
 116:	88 3b       	cpi	r24, 0xB8	; 184
 118:	91 05       	cpc	r25, r1
 11a:	21 f5       	brne	.+72     	; 0x164 <_Z8I2C_mainv+0x7a>
 11c:	14 c0       	rjmp	.+40     	; 0x146 <_Z8I2C_mainv+0x5c>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
 11e:	80 91 bb 00 	lds	r24, 0x00BB
 122:	e0 91 0c 01 	lds	r30, 0x010C
 126:	f0 91 0d 01 	lds	r31, 0x010D
 12a:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 12c:	84 ec       	ldi	r24, 0xC4	; 196
 12e:	80 93 bc 00 	sts	0x00BC, r24
		break;
 132:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
 134:	e0 91 0e 01 	lds	r30, 0x010E
 138:	f0 91 0f 01 	lds	r31, 0x010F
 13c:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 13e:	84 ec       	ldi	r24, 0xC4	; 196
 140:	80 93 bc 00 	sts	0x00BC, r24
		break;
 144:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
 146:	e0 91 0e 01 	lds	r30, 0x010E
 14a:	f0 91 0f 01 	lds	r31, 0x010F
 14e:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 150:	84 ec       	ldi	r24, 0xC4	; 196
 152:	80 93 bc 00 	sts	0x00BC, r24
		break;
 156:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
 158:	ec eb       	ldi	r30, 0xBC	; 188
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 15e:	84 ec       	ldi	r24, 0xC4	; 196
 160:	80 83       	st	Z, r24
		break;
 162:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 164:	84 ec       	ldi	r24, 0xC4	; 196
 166:	80 93 bc 00 	sts	0x00BC, r24
 16a:	08 95       	ret

0000016c <__vector_24>:
	}
}


ISR(TWI_vect)
{
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	2f 93       	push	r18
 178:	3f 93       	push	r19
 17a:	4f 93       	push	r20
 17c:	5f 93       	push	r21
 17e:	6f 93       	push	r22
 180:	7f 93       	push	r23
 182:	8f 93       	push	r24
 184:	9f 93       	push	r25
 186:	af 93       	push	r26
 188:	bf 93       	push	r27
 18a:	ef 93       	push	r30
 18c:	ff 93       	push	r31
	switch(TW_STATUS)
 18e:	80 91 b9 00 	lds	r24, 0x00B9
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	88 7f       	andi	r24, 0xF8	; 248
 196:	90 70       	andi	r25, 0x00	; 0
 198:	80 38       	cpi	r24, 0x80	; 128
 19a:	91 05       	cpc	r25, r1
 19c:	69 f0       	breq	.+26     	; 0x1b8 <__vector_24+0x4c>
 19e:	81 38       	cpi	r24, 0x81	; 129
 1a0:	91 05       	cpc	r25, r1
 1a2:	1c f4       	brge	.+6      	; 0x1aa <__vector_24+0x3e>
 1a4:	00 97       	sbiw	r24, 0x00	; 0
 1a6:	29 f1       	breq	.+74     	; 0x1f2 <__vector_24+0x86>
 1a8:	2a c0       	rjmp	.+84     	; 0x1fe <__vector_24+0x92>
 1aa:	88 3a       	cpi	r24, 0xA8	; 168
 1ac:	91 05       	cpc	r25, r1
 1ae:	79 f0       	breq	.+30     	; 0x1ce <__vector_24+0x62>
 1b0:	88 3b       	cpi	r24, 0xB8	; 184
 1b2:	91 05       	cpc	r25, r1
 1b4:	21 f5       	brne	.+72     	; 0x1fe <__vector_24+0x92>
 1b6:	14 c0       	rjmp	.+40     	; 0x1e0 <__vector_24+0x74>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
 1b8:	80 91 bb 00 	lds	r24, 0x00BB
 1bc:	e0 91 0c 01 	lds	r30, 0x010C
 1c0:	f0 91 0d 01 	lds	r31, 0x010D
 1c4:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 1c6:	85 ec       	ldi	r24, 0xC5	; 197
 1c8:	80 93 bc 00 	sts	0x00BC, r24
		break;
 1cc:	1b c0       	rjmp	.+54     	; 0x204 <__vector_24+0x98>
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
 1ce:	e0 91 0e 01 	lds	r30, 0x010E
 1d2:	f0 91 0f 01 	lds	r31, 0x010F
 1d6:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 1d8:	85 ec       	ldi	r24, 0xC5	; 197
 1da:	80 93 bc 00 	sts	0x00BC, r24
		break;
 1de:	12 c0       	rjmp	.+36     	; 0x204 <__vector_24+0x98>
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
 1e0:	e0 91 0e 01 	lds	r30, 0x010E
 1e4:	f0 91 0f 01 	lds	r31, 0x010F
 1e8:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 1ea:	85 ec       	ldi	r24, 0xC5	; 197
 1ec:	80 93 bc 00 	sts	0x00BC, r24
		break;
 1f0:	09 c0       	rjmp	.+18     	; 0x204 <__vector_24+0x98>
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
 1f2:	ec eb       	ldi	r30, 0xBC	; 188
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 1f8:	85 ec       	ldi	r24, 0xC5	; 197
 1fa:	80 83       	st	Z, r24
		break;
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <__vector_24+0x98>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 1fe:	85 ec       	ldi	r24, 0xC5	; 197
 200:	80 93 bc 00 	sts	0x00BC, r24
		break;
	}
 204:	ff 91       	pop	r31
 206:	ef 91       	pop	r30
 208:	bf 91       	pop	r27
 20a:	af 91       	pop	r26
 20c:	9f 91       	pop	r25
 20e:	8f 91       	pop	r24
 210:	7f 91       	pop	r23
 212:	6f 91       	pop	r22
 214:	5f 91       	pop	r21
 216:	4f 91       	pop	r20
 218:	3f 91       	pop	r19
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <_Z15i2c_received_cbPc>:
#define I2C_ADDR 0x14
int sensor_values[SENSOR_SUM] = {};

void i2c_received_cb(char* str) {
	//pass 
}
 226:	08 95       	ret

00000228 <_Z14i2c_request_cbPc>:

void i2c_request_cb(char* buf) {
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	//sprintf(buf,"%ld",count);
	sprintf(buf, "%d,%d,%d,%d", sensor_values[0],sensor_values[1],sensor_values[2],sensor_values[3]);
 228:	2d b7       	in	r18, 0x3d	; 61
 22a:	3e b7       	in	r19, 0x3e	; 62
 22c:	2c 50       	subi	r18, 0x0C	; 12
 22e:	30 40       	sbci	r19, 0x00	; 0
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	3e bf       	out	0x3e, r19	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	2d bf       	out	0x3d, r18	; 61
 23a:	ed b7       	in	r30, 0x3d	; 61
 23c:	fe b7       	in	r31, 0x3e	; 62
 23e:	31 96       	adiw	r30, 0x01	; 1
 240:	ad b7       	in	r26, 0x3d	; 61
 242:	be b7       	in	r27, 0x3e	; 62
 244:	12 96       	adiw	r26, 0x02	; 2
 246:	9c 93       	st	X, r25
 248:	8e 93       	st	-X, r24
 24a:	11 97       	sbiw	r26, 0x01	; 1
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	93 83       	std	Z+3, r25	; 0x03
 252:	82 83       	std	Z+2, r24	; 0x02
 254:	80 91 10 01 	lds	r24, 0x0110
 258:	90 91 11 01 	lds	r25, 0x0111
 25c:	95 83       	std	Z+5, r25	; 0x05
 25e:	84 83       	std	Z+4, r24	; 0x04
 260:	80 91 12 01 	lds	r24, 0x0112
 264:	90 91 13 01 	lds	r25, 0x0113
 268:	97 83       	std	Z+7, r25	; 0x07
 26a:	86 83       	std	Z+6, r24	; 0x06
 26c:	80 91 14 01 	lds	r24, 0x0114
 270:	90 91 15 01 	lds	r25, 0x0115
 274:	91 87       	std	Z+9, r25	; 0x09
 276:	80 87       	std	Z+8, r24	; 0x08
 278:	80 91 16 01 	lds	r24, 0x0116
 27c:	90 91 17 01 	lds	r25, 0x0117
 280:	93 87       	std	Z+11, r25	; 0x0b
 282:	82 87       	std	Z+10, r24	; 0x0a
 284:	0e 94 cc 01 	call	0x398	; 0x398 <sprintf>
 288:	2d b7       	in	r18, 0x3d	; 61
 28a:	3e b7       	in	r19, 0x3e	; 62
 28c:	24 5f       	subi	r18, 0xF4	; 244
 28e:	3f 4f       	sbci	r19, 0xFF	; 255
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	f8 94       	cli
 294:	3e bf       	out	0x3e, r19	; 62
 296:	0f be       	out	0x3f, r0	; 63
 298:	2d bf       	out	0x3d, r18	; 61
}
 29a:	08 95       	ret

0000029c <_Z5setupv>:

	// LED of addresses 0x10~ 0x1F 0~F -> 0~15
	//PORTD |= (0b00001111 & I2C_ADDR);

	// xxx is it needed to set i2c pin?
	TI2C_init(I2C_ADDR,i2c_received_cb, i2c_request_cb);
 29c:	84 e1       	ldi	r24, 0x14	; 20
 29e:	63 e1       	ldi	r22, 0x13	; 19
 2a0:	71 e0       	ldi	r23, 0x01	; 1
 2a2:	44 e1       	ldi	r20, 0x14	; 20
 2a4:	51 e0       	ldi	r21, 0x01	; 1
 2a6:	0e 94 89 01 	call	0x312	; 0x312 <_Z9TI2C_inithPFvPcES1_>
}
 2aa:	08 95       	ret

000002ac <main>:

int main(void)
{
	setup();
 2ac:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z5setupv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b0:	83 ec       	ldi	r24, 0xC3	; 195
 2b2:	99 e0       	ldi	r25, 0x09	; 9
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x8>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0xe>
 2ba:	00 00       	nop
 2bc:	f9 cf       	rjmp	.-14     	; 0x2b0 <main+0x4>

000002be <_Z14TI2C_requestedv>:

void TI2C_requested() //Å®master
{
	static int i = 0;
	
	if (i == 0){
 2be:	80 91 1c 05 	lds	r24, 0x051C
 2c2:	90 91 1d 05 	lds	r25, 0x051D
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <_Z14TI2C_requestedv+0x1a>
		// initialize
		TI2C_req_cb(TI2C_buf_send.str_buf);
 2ca:	e0 91 18 01 	lds	r30, 0x0118
 2ce:	f0 91 19 01 	lds	r31, 0x0119
 2d2:	8c e1       	ldi	r24, 0x1C	; 28
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	09 95       	icall
	}
	// send data
	if (TI2C_buf_send.uint_buf[i] == '\0') { 
 2d8:	e0 91 1c 05 	lds	r30, 0x051C
 2dc:	f0 91 1d 05 	lds	r31, 0x051D
 2e0:	e4 5e       	subi	r30, 0xE4	; 228
 2e2:	fe 4f       	sbci	r31, 0xFE	; 254
 2e4:	80 81       	ld	r24, Z
 2e6:	88 23       	and	r24, r24
 2e8:	41 f4       	brne	.+16     	; 0x2fa <_Z14TI2C_requestedv+0x3c>
void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)());
void I2C_main();

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
 2ea:	84 e2       	ldi	r24, 0x24	; 36
 2ec:	80 93 bb 00 	sts	0x00BB, r24
		I2C_transmitByte(postfix);
		i = 0;
 2f0:	10 92 1d 05 	sts	0x051D, r1
 2f4:	10 92 1c 05 	sts	0x051C, r1
 2f8:	08 95       	ret
 2fa:	80 93 bb 00 	sts	0x00BB, r24
	} else {
		I2C_transmitByte(TI2C_buf_send.uint_buf[i]);
		i++;
 2fe:	80 91 1c 05 	lds	r24, 0x051C
 302:	90 91 1d 05 	lds	r25, 0x051D
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	90 93 1d 05 	sts	0x051D, r25
 30c:	80 93 1c 05 	sts	0x051C, r24
 310:	08 95       	ret

00000312 <_Z9TI2C_inithPFvPcES1_>:
void (*TI2C_recv_cb)(char*);
void (*TI2C_req_cb)(char*);


void TI2C_init(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
 312:	70 93 1b 01 	sts	0x011B, r23
 316:	60 93 1a 01 	sts	0x011A, r22
	TI2C_req_cb = req;
 31a:	50 93 19 01 	sts	0x0119, r21
 31e:	40 93 18 01 	sts	0x0118, r20
	I2C_init(address);
 322:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z8I2C_inith>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
 326:	81 eb       	ldi	r24, 0xB1	; 177
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	6f e5       	ldi	r22, 0x5F	; 95
 32c:	71 e0       	ldi	r23, 0x01	; 1
 32e:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
 332:	08 95       	ret

00000334 <_Z14TI2C_init_synchPFvPcES1_>:

void TI2C_init_sync(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
 334:	70 93 1b 01 	sts	0x011B, r23
 338:	60 93 1a 01 	sts	0x011A, r22
	TI2C_req_cb = req;
 33c:	50 93 19 01 	sts	0x0119, r21
 340:	40 93 18 01 	sts	0x0118, r20
	I2C_init_sync(address);
 344:	0e 94 65 00 	call	0xca	; 0xca <_Z13I2C_init_synch>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
 348:	81 eb       	ldi	r24, 0xB1	; 177
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	6f e5       	ldi	r22, 0x5F	; 95
 34e:	71 e0       	ldi	r23, 0x01	; 1
 350:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
 354:	08 95       	ret

00000356 <_Z13TI2C_receivedPc>:


void TI2C_received(char *str) //slave <-
{
	TI2C_recv_cb(str);
 356:	e0 91 1a 01 	lds	r30, 0x011A
 35a:	f0 91 1b 01 	lds	r31, 0x011B
 35e:	09 95       	icall
}
 360:	08 95       	ret

00000362 <_Z18TI2C_char_receivedh>:

void TI2C_char_received(uint8_t received_data) {
	//DDRC = 0b00000010;
	static int i = 0;
	// ÉfÅ[É^Ç…í«â¡
	TI2C_buf.uint_buf[i] = received_data;
 362:	20 91 1e 05 	lds	r18, 0x051E
 366:	30 91 1f 05 	lds	r19, 0x051F
 36a:	f9 01       	movw	r30, r18
 36c:	e4 5e       	subi	r30, 0xE4	; 228
 36e:	fc 4f       	sbci	r31, 0xFC	; 252
 370:	80 83       	st	Z, r24
	// postfixÇ™óàÇΩèÍçáÇ…ÉRÅ[ÉãÉoÉbÉNÇåƒÇÒÇ≈èâä˙âª
	if (TI2C_buf.str_buf[i] == postfix) {
 372:	84 32       	cpi	r24, 0x24	; 36
 374:	51 f4       	brne	.+20     	; 0x38a <_Z18TI2C_char_receivedh+0x28>
		TI2C_buf.str_buf[i] = '\0';
 376:	8c e1       	ldi	r24, 0x1C	; 28
 378:	93 e0       	ldi	r25, 0x03	; 3
 37a:	10 82       	st	Z, r1
		TI2C_received(TI2C_buf.str_buf);
 37c:	0e 94 ab 01 	call	0x356	; 0x356 <_Z13TI2C_receivedPc>
		i = 0;
 380:	10 92 1f 05 	sts	0x051F, r1
 384:	10 92 1e 05 	sts	0x051E, r1
 388:	08 95       	ret
	} else {
		i++;
 38a:	2f 5f       	subi	r18, 0xFF	; 255
 38c:	3f 4f       	sbci	r19, 0xFF	; 255
 38e:	30 93 1f 05 	sts	0x051F, r19
 392:	20 93 1e 05 	sts	0x051E, r18
 396:	08 95       	ret

00000398 <sprintf>:
 398:	ae e0       	ldi	r26, 0x0E	; 14
 39a:	b0 e0       	ldi	r27, 0x00	; 0
 39c:	e2 ed       	ldi	r30, 0xD2	; 210
 39e:	f1 e0       	ldi	r31, 0x01	; 1
 3a0:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__prologue_saves__+0x1c>
 3a4:	0d 89       	ldd	r16, Y+21	; 0x15
 3a6:	1e 89       	ldd	r17, Y+22	; 0x16
 3a8:	86 e0       	ldi	r24, 0x06	; 6
 3aa:	8c 83       	std	Y+4, r24	; 0x04
 3ac:	1a 83       	std	Y+2, r17	; 0x02
 3ae:	09 83       	std	Y+1, r16	; 0x01
 3b0:	8f ef       	ldi	r24, 0xFF	; 255
 3b2:	9f e7       	ldi	r25, 0x7F	; 127
 3b4:	9e 83       	std	Y+6, r25	; 0x06
 3b6:	8d 83       	std	Y+5, r24	; 0x05
 3b8:	ae 01       	movw	r20, r28
 3ba:	47 5e       	subi	r20, 0xE7	; 231
 3bc:	5f 4f       	sbci	r21, 0xFF	; 255
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	6f 89       	ldd	r22, Y+23	; 0x17
 3c4:	78 8d       	ldd	r23, Y+24	; 0x18
 3c6:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vfprintf>
 3ca:	ef 81       	ldd	r30, Y+7	; 0x07
 3cc:	f8 85       	ldd	r31, Y+8	; 0x08
 3ce:	e0 0f       	add	r30, r16
 3d0:	f1 1f       	adc	r31, r17
 3d2:	10 82       	st	Z, r1
 3d4:	2e 96       	adiw	r28, 0x0e	; 14
 3d6:	e4 e0       	ldi	r30, 0x04	; 4
 3d8:	0c 94 96 04 	jmp	0x92c	; 0x92c <__epilogue_restores__+0x1c>

000003dc <vfprintf>:
 3dc:	ad e0       	ldi	r26, 0x0D	; 13
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	e4 ef       	ldi	r30, 0xF4	; 244
 3e2:	f1 e0       	ldi	r31, 0x01	; 1
 3e4:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__prologue_saves__>
 3e8:	3c 01       	movw	r6, r24
 3ea:	7d 87       	std	Y+13, r23	; 0x0d
 3ec:	6c 87       	std	Y+12, r22	; 0x0c
 3ee:	5a 01       	movw	r10, r20
 3f0:	fc 01       	movw	r30, r24
 3f2:	17 82       	std	Z+7, r1	; 0x07
 3f4:	16 82       	std	Z+6, r1	; 0x06
 3f6:	83 81       	ldd	r24, Z+3	; 0x03
 3f8:	81 ff       	sbrs	r24, 1
 3fa:	c8 c1       	rjmp	.+912    	; 0x78c <vfprintf+0x3b0>
 3fc:	2e 01       	movw	r4, r28
 3fe:	08 94       	sec
 400:	41 1c       	adc	r4, r1
 402:	51 1c       	adc	r5, r1
 404:	f3 01       	movw	r30, r6
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	ec 85       	ldd	r30, Y+12	; 0x0c
 40a:	fd 85       	ldd	r31, Y+13	; 0x0d
 40c:	93 fd       	sbrc	r25, 3
 40e:	85 91       	lpm	r24, Z+
 410:	93 ff       	sbrs	r25, 3
 412:	81 91       	ld	r24, Z+
 414:	fd 87       	std	Y+13, r31	; 0x0d
 416:	ec 87       	std	Y+12, r30	; 0x0c
 418:	88 23       	and	r24, r24
 41a:	09 f4       	brne	.+2      	; 0x41e <vfprintf+0x42>
 41c:	b3 c1       	rjmp	.+870    	; 0x784 <vfprintf+0x3a8>
 41e:	85 32       	cpi	r24, 0x25	; 37
 420:	41 f4       	brne	.+16     	; 0x432 <vfprintf+0x56>
 422:	93 fd       	sbrc	r25, 3
 424:	85 91       	lpm	r24, Z+
 426:	93 ff       	sbrs	r25, 3
 428:	81 91       	ld	r24, Z+
 42a:	fd 87       	std	Y+13, r31	; 0x0d
 42c:	ec 87       	std	Y+12, r30	; 0x0c
 42e:	85 32       	cpi	r24, 0x25	; 37
 430:	29 f4       	brne	.+10     	; 0x43c <vfprintf+0x60>
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	b3 01       	movw	r22, r6
 436:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 43a:	e4 cf       	rjmp	.-56     	; 0x404 <vfprintf+0x28>
 43c:	ff 24       	eor	r15, r15
 43e:	ee 24       	eor	r14, r14
 440:	10 e0       	ldi	r17, 0x00	; 0
 442:	10 32       	cpi	r17, 0x20	; 32
 444:	b0 f4       	brcc	.+44     	; 0x472 <vfprintf+0x96>
 446:	8b 32       	cpi	r24, 0x2B	; 43
 448:	69 f0       	breq	.+26     	; 0x464 <vfprintf+0x88>
 44a:	8c 32       	cpi	r24, 0x2C	; 44
 44c:	28 f4       	brcc	.+10     	; 0x458 <vfprintf+0x7c>
 44e:	80 32       	cpi	r24, 0x20	; 32
 450:	51 f0       	breq	.+20     	; 0x466 <vfprintf+0x8a>
 452:	83 32       	cpi	r24, 0x23	; 35
 454:	71 f4       	brne	.+28     	; 0x472 <vfprintf+0x96>
 456:	0b c0       	rjmp	.+22     	; 0x46e <vfprintf+0x92>
 458:	8d 32       	cpi	r24, 0x2D	; 45
 45a:	39 f0       	breq	.+14     	; 0x46a <vfprintf+0x8e>
 45c:	80 33       	cpi	r24, 0x30	; 48
 45e:	49 f4       	brne	.+18     	; 0x472 <vfprintf+0x96>
 460:	11 60       	ori	r17, 0x01	; 1
 462:	2c c0       	rjmp	.+88     	; 0x4bc <vfprintf+0xe0>
 464:	12 60       	ori	r17, 0x02	; 2
 466:	14 60       	ori	r17, 0x04	; 4
 468:	29 c0       	rjmp	.+82     	; 0x4bc <vfprintf+0xe0>
 46a:	18 60       	ori	r17, 0x08	; 8
 46c:	27 c0       	rjmp	.+78     	; 0x4bc <vfprintf+0xe0>
 46e:	10 61       	ori	r17, 0x10	; 16
 470:	25 c0       	rjmp	.+74     	; 0x4bc <vfprintf+0xe0>
 472:	17 fd       	sbrc	r17, 7
 474:	2e c0       	rjmp	.+92     	; 0x4d2 <vfprintf+0xf6>
 476:	28 2f       	mov	r18, r24
 478:	20 53       	subi	r18, 0x30	; 48
 47a:	2a 30       	cpi	r18, 0x0A	; 10
 47c:	98 f4       	brcc	.+38     	; 0x4a4 <vfprintf+0xc8>
 47e:	16 ff       	sbrs	r17, 6
 480:	08 c0       	rjmp	.+16     	; 0x492 <vfprintf+0xb6>
 482:	8f 2d       	mov	r24, r15
 484:	88 0f       	add	r24, r24
 486:	f8 2e       	mov	r15, r24
 488:	ff 0c       	add	r15, r15
 48a:	ff 0c       	add	r15, r15
 48c:	f8 0e       	add	r15, r24
 48e:	f2 0e       	add	r15, r18
 490:	15 c0       	rjmp	.+42     	; 0x4bc <vfprintf+0xe0>
 492:	8e 2d       	mov	r24, r14
 494:	88 0f       	add	r24, r24
 496:	e8 2e       	mov	r14, r24
 498:	ee 0c       	add	r14, r14
 49a:	ee 0c       	add	r14, r14
 49c:	e8 0e       	add	r14, r24
 49e:	e2 0e       	add	r14, r18
 4a0:	10 62       	ori	r17, 0x20	; 32
 4a2:	0c c0       	rjmp	.+24     	; 0x4bc <vfprintf+0xe0>
 4a4:	8e 32       	cpi	r24, 0x2E	; 46
 4a6:	21 f4       	brne	.+8      	; 0x4b0 <vfprintf+0xd4>
 4a8:	16 fd       	sbrc	r17, 6
 4aa:	6c c1       	rjmp	.+728    	; 0x784 <vfprintf+0x3a8>
 4ac:	10 64       	ori	r17, 0x40	; 64
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <vfprintf+0xe0>
 4b0:	8c 36       	cpi	r24, 0x6C	; 108
 4b2:	11 f4       	brne	.+4      	; 0x4b8 <vfprintf+0xdc>
 4b4:	10 68       	ori	r17, 0x80	; 128
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <vfprintf+0xe0>
 4b8:	88 36       	cpi	r24, 0x68	; 104
 4ba:	59 f4       	brne	.+22     	; 0x4d2 <vfprintf+0xf6>
 4bc:	ec 85       	ldd	r30, Y+12	; 0x0c
 4be:	fd 85       	ldd	r31, Y+13	; 0x0d
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	fd 87       	std	Y+13, r31	; 0x0d
 4ca:	ec 87       	std	Y+12, r30	; 0x0c
 4cc:	88 23       	and	r24, r24
 4ce:	09 f0       	breq	.+2      	; 0x4d2 <vfprintf+0xf6>
 4d0:	b8 cf       	rjmp	.-144    	; 0x442 <vfprintf+0x66>
 4d2:	98 2f       	mov	r25, r24
 4d4:	95 54       	subi	r25, 0x45	; 69
 4d6:	93 30       	cpi	r25, 0x03	; 3
 4d8:	18 f0       	brcs	.+6      	; 0x4e0 <vfprintf+0x104>
 4da:	90 52       	subi	r25, 0x20	; 32
 4dc:	93 30       	cpi	r25, 0x03	; 3
 4de:	38 f4       	brcc	.+14     	; 0x4ee <vfprintf+0x112>
 4e0:	24 e0       	ldi	r18, 0x04	; 4
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	a2 0e       	add	r10, r18
 4e6:	b3 1e       	adc	r11, r19
 4e8:	3f e3       	ldi	r19, 0x3F	; 63
 4ea:	39 83       	std	Y+1, r19	; 0x01
 4ec:	0f c0       	rjmp	.+30     	; 0x50c <vfprintf+0x130>
 4ee:	83 36       	cpi	r24, 0x63	; 99
 4f0:	31 f0       	breq	.+12     	; 0x4fe <vfprintf+0x122>
 4f2:	83 37       	cpi	r24, 0x73	; 115
 4f4:	81 f0       	breq	.+32     	; 0x516 <vfprintf+0x13a>
 4f6:	83 35       	cpi	r24, 0x53	; 83
 4f8:	09 f0       	breq	.+2      	; 0x4fc <vfprintf+0x120>
 4fa:	5a c0       	rjmp	.+180    	; 0x5b0 <vfprintf+0x1d4>
 4fc:	22 c0       	rjmp	.+68     	; 0x542 <vfprintf+0x166>
 4fe:	f5 01       	movw	r30, r10
 500:	80 81       	ld	r24, Z
 502:	89 83       	std	Y+1, r24	; 0x01
 504:	22 e0       	ldi	r18, 0x02	; 2
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	a2 0e       	add	r10, r18
 50a:	b3 1e       	adc	r11, r19
 50c:	21 e0       	ldi	r18, 0x01	; 1
 50e:	c2 2e       	mov	r12, r18
 510:	d1 2c       	mov	r13, r1
 512:	42 01       	movw	r8, r4
 514:	14 c0       	rjmp	.+40     	; 0x53e <vfprintf+0x162>
 516:	92 e0       	ldi	r25, 0x02	; 2
 518:	29 2e       	mov	r2, r25
 51a:	31 2c       	mov	r3, r1
 51c:	2a 0c       	add	r2, r10
 51e:	3b 1c       	adc	r3, r11
 520:	f5 01       	movw	r30, r10
 522:	80 80       	ld	r8, Z
 524:	91 80       	ldd	r9, Z+1	; 0x01
 526:	16 ff       	sbrs	r17, 6
 528:	03 c0       	rjmp	.+6      	; 0x530 <vfprintf+0x154>
 52a:	6f 2d       	mov	r22, r15
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	02 c0       	rjmp	.+4      	; 0x534 <vfprintf+0x158>
 530:	6f ef       	ldi	r22, 0xFF	; 255
 532:	7f ef       	ldi	r23, 0xFF	; 255
 534:	c4 01       	movw	r24, r8
 536:	0e 94 d7 03 	call	0x7ae	; 0x7ae <strnlen>
 53a:	6c 01       	movw	r12, r24
 53c:	51 01       	movw	r10, r2
 53e:	1f 77       	andi	r17, 0x7F	; 127
 540:	15 c0       	rjmp	.+42     	; 0x56c <vfprintf+0x190>
 542:	82 e0       	ldi	r24, 0x02	; 2
 544:	28 2e       	mov	r2, r24
 546:	31 2c       	mov	r3, r1
 548:	2a 0c       	add	r2, r10
 54a:	3b 1c       	adc	r3, r11
 54c:	f5 01       	movw	r30, r10
 54e:	80 80       	ld	r8, Z
 550:	91 80       	ldd	r9, Z+1	; 0x01
 552:	16 ff       	sbrs	r17, 6
 554:	03 c0       	rjmp	.+6      	; 0x55c <vfprintf+0x180>
 556:	6f 2d       	mov	r22, r15
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <vfprintf+0x184>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	c4 01       	movw	r24, r8
 562:	0e 94 cc 03 	call	0x798	; 0x798 <strnlen_P>
 566:	6c 01       	movw	r12, r24
 568:	10 68       	ori	r17, 0x80	; 128
 56a:	51 01       	movw	r10, r2
 56c:	13 fd       	sbrc	r17, 3
 56e:	1c c0       	rjmp	.+56     	; 0x5a8 <vfprintf+0x1cc>
 570:	06 c0       	rjmp	.+12     	; 0x57e <vfprintf+0x1a2>
 572:	80 e2       	ldi	r24, 0x20	; 32
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	b3 01       	movw	r22, r6
 578:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 57c:	ea 94       	dec	r14
 57e:	8e 2d       	mov	r24, r14
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	c8 16       	cp	r12, r24
 584:	d9 06       	cpc	r13, r25
 586:	a8 f3       	brcs	.-22     	; 0x572 <vfprintf+0x196>
 588:	0f c0       	rjmp	.+30     	; 0x5a8 <vfprintf+0x1cc>
 58a:	f4 01       	movw	r30, r8
 58c:	17 fd       	sbrc	r17, 7
 58e:	85 91       	lpm	r24, Z+
 590:	17 ff       	sbrs	r17, 7
 592:	81 91       	ld	r24, Z+
 594:	4f 01       	movw	r8, r30
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	b3 01       	movw	r22, r6
 59a:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 59e:	e1 10       	cpse	r14, r1
 5a0:	ea 94       	dec	r14
 5a2:	08 94       	sec
 5a4:	c1 08       	sbc	r12, r1
 5a6:	d1 08       	sbc	r13, r1
 5a8:	c1 14       	cp	r12, r1
 5aa:	d1 04       	cpc	r13, r1
 5ac:	71 f7       	brne	.-36     	; 0x58a <vfprintf+0x1ae>
 5ae:	e7 c0       	rjmp	.+462    	; 0x77e <vfprintf+0x3a2>
 5b0:	84 36       	cpi	r24, 0x64	; 100
 5b2:	11 f0       	breq	.+4      	; 0x5b8 <vfprintf+0x1dc>
 5b4:	89 36       	cpi	r24, 0x69	; 105
 5b6:	51 f5       	brne	.+84     	; 0x60c <vfprintf+0x230>
 5b8:	f5 01       	movw	r30, r10
 5ba:	17 ff       	sbrs	r17, 7
 5bc:	07 c0       	rjmp	.+14     	; 0x5cc <vfprintf+0x1f0>
 5be:	80 81       	ld	r24, Z
 5c0:	91 81       	ldd	r25, Z+1	; 0x01
 5c2:	a2 81       	ldd	r26, Z+2	; 0x02
 5c4:	b3 81       	ldd	r27, Z+3	; 0x03
 5c6:	24 e0       	ldi	r18, 0x04	; 4
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	08 c0       	rjmp	.+16     	; 0x5dc <vfprintf+0x200>
 5cc:	80 81       	ld	r24, Z
 5ce:	91 81       	ldd	r25, Z+1	; 0x01
 5d0:	aa 27       	eor	r26, r26
 5d2:	97 fd       	sbrc	r25, 7
 5d4:	a0 95       	com	r26
 5d6:	ba 2f       	mov	r27, r26
 5d8:	22 e0       	ldi	r18, 0x02	; 2
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	a2 0e       	add	r10, r18
 5de:	b3 1e       	adc	r11, r19
 5e0:	01 2f       	mov	r16, r17
 5e2:	0f 76       	andi	r16, 0x6F	; 111
 5e4:	b7 ff       	sbrs	r27, 7
 5e6:	08 c0       	rjmp	.+16     	; 0x5f8 <vfprintf+0x21c>
 5e8:	b0 95       	com	r27
 5ea:	a0 95       	com	r26
 5ec:	90 95       	com	r25
 5ee:	81 95       	neg	r24
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	af 4f       	sbci	r26, 0xFF	; 255
 5f4:	bf 4f       	sbci	r27, 0xFF	; 255
 5f6:	00 68       	ori	r16, 0x80	; 128
 5f8:	bc 01       	movw	r22, r24
 5fa:	cd 01       	movw	r24, r26
 5fc:	a2 01       	movw	r20, r4
 5fe:	2a e0       	ldi	r18, 0x0A	; 10
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	0e 94 0e 04 	call	0x81c	; 0x81c <__ultoa_invert>
 606:	d8 2e       	mov	r13, r24
 608:	d4 18       	sub	r13, r4
 60a:	3f c0       	rjmp	.+126    	; 0x68a <vfprintf+0x2ae>
 60c:	85 37       	cpi	r24, 0x75	; 117
 60e:	21 f4       	brne	.+8      	; 0x618 <vfprintf+0x23c>
 610:	1f 7e       	andi	r17, 0xEF	; 239
 612:	2a e0       	ldi	r18, 0x0A	; 10
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	20 c0       	rjmp	.+64     	; 0x658 <vfprintf+0x27c>
 618:	19 7f       	andi	r17, 0xF9	; 249
 61a:	8f 36       	cpi	r24, 0x6F	; 111
 61c:	a9 f0       	breq	.+42     	; 0x648 <vfprintf+0x26c>
 61e:	80 37       	cpi	r24, 0x70	; 112
 620:	20 f4       	brcc	.+8      	; 0x62a <vfprintf+0x24e>
 622:	88 35       	cpi	r24, 0x58	; 88
 624:	09 f0       	breq	.+2      	; 0x628 <vfprintf+0x24c>
 626:	ae c0       	rjmp	.+348    	; 0x784 <vfprintf+0x3a8>
 628:	0b c0       	rjmp	.+22     	; 0x640 <vfprintf+0x264>
 62a:	80 37       	cpi	r24, 0x70	; 112
 62c:	21 f0       	breq	.+8      	; 0x636 <vfprintf+0x25a>
 62e:	88 37       	cpi	r24, 0x78	; 120
 630:	09 f0       	breq	.+2      	; 0x634 <vfprintf+0x258>
 632:	a8 c0       	rjmp	.+336    	; 0x784 <vfprintf+0x3a8>
 634:	01 c0       	rjmp	.+2      	; 0x638 <vfprintf+0x25c>
 636:	10 61       	ori	r17, 0x10	; 16
 638:	14 ff       	sbrs	r17, 4
 63a:	09 c0       	rjmp	.+18     	; 0x64e <vfprintf+0x272>
 63c:	14 60       	ori	r17, 0x04	; 4
 63e:	07 c0       	rjmp	.+14     	; 0x64e <vfprintf+0x272>
 640:	14 ff       	sbrs	r17, 4
 642:	08 c0       	rjmp	.+16     	; 0x654 <vfprintf+0x278>
 644:	16 60       	ori	r17, 0x06	; 6
 646:	06 c0       	rjmp	.+12     	; 0x654 <vfprintf+0x278>
 648:	28 e0       	ldi	r18, 0x08	; 8
 64a:	30 e0       	ldi	r19, 0x00	; 0
 64c:	05 c0       	rjmp	.+10     	; 0x658 <vfprintf+0x27c>
 64e:	20 e1       	ldi	r18, 0x10	; 16
 650:	30 e0       	ldi	r19, 0x00	; 0
 652:	02 c0       	rjmp	.+4      	; 0x658 <vfprintf+0x27c>
 654:	20 e1       	ldi	r18, 0x10	; 16
 656:	32 e0       	ldi	r19, 0x02	; 2
 658:	f5 01       	movw	r30, r10
 65a:	17 ff       	sbrs	r17, 7
 65c:	07 c0       	rjmp	.+14     	; 0x66c <vfprintf+0x290>
 65e:	60 81       	ld	r22, Z
 660:	71 81       	ldd	r23, Z+1	; 0x01
 662:	82 81       	ldd	r24, Z+2	; 0x02
 664:	93 81       	ldd	r25, Z+3	; 0x03
 666:	44 e0       	ldi	r20, 0x04	; 4
 668:	50 e0       	ldi	r21, 0x00	; 0
 66a:	06 c0       	rjmp	.+12     	; 0x678 <vfprintf+0x29c>
 66c:	60 81       	ld	r22, Z
 66e:	71 81       	ldd	r23, Z+1	; 0x01
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	42 e0       	ldi	r20, 0x02	; 2
 676:	50 e0       	ldi	r21, 0x00	; 0
 678:	a4 0e       	add	r10, r20
 67a:	b5 1e       	adc	r11, r21
 67c:	a2 01       	movw	r20, r4
 67e:	0e 94 0e 04 	call	0x81c	; 0x81c <__ultoa_invert>
 682:	d8 2e       	mov	r13, r24
 684:	d4 18       	sub	r13, r4
 686:	01 2f       	mov	r16, r17
 688:	0f 77       	andi	r16, 0x7F	; 127
 68a:	06 ff       	sbrs	r16, 6
 68c:	09 c0       	rjmp	.+18     	; 0x6a0 <vfprintf+0x2c4>
 68e:	0e 7f       	andi	r16, 0xFE	; 254
 690:	df 14       	cp	r13, r15
 692:	30 f4       	brcc	.+12     	; 0x6a0 <vfprintf+0x2c4>
 694:	04 ff       	sbrs	r16, 4
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <vfprintf+0x2c8>
 698:	02 fd       	sbrc	r16, 2
 69a:	04 c0       	rjmp	.+8      	; 0x6a4 <vfprintf+0x2c8>
 69c:	0f 7e       	andi	r16, 0xEF	; 239
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0x2c8>
 6a0:	1d 2d       	mov	r17, r13
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <vfprintf+0x2ca>
 6a4:	1f 2d       	mov	r17, r15
 6a6:	80 2f       	mov	r24, r16
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	04 ff       	sbrs	r16, 4
 6ac:	0c c0       	rjmp	.+24     	; 0x6c6 <vfprintf+0x2ea>
 6ae:	fe 01       	movw	r30, r28
 6b0:	ed 0d       	add	r30, r13
 6b2:	f1 1d       	adc	r31, r1
 6b4:	20 81       	ld	r18, Z
 6b6:	20 33       	cpi	r18, 0x30	; 48
 6b8:	11 f4       	brne	.+4      	; 0x6be <vfprintf+0x2e2>
 6ba:	09 7e       	andi	r16, 0xE9	; 233
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <vfprintf+0x2f4>
 6be:	02 ff       	sbrs	r16, 2
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <vfprintf+0x2f2>
 6c2:	1e 5f       	subi	r17, 0xFE	; 254
 6c4:	05 c0       	rjmp	.+10     	; 0x6d0 <vfprintf+0x2f4>
 6c6:	86 78       	andi	r24, 0x86	; 134
 6c8:	90 70       	andi	r25, 0x00	; 0
 6ca:	00 97       	sbiw	r24, 0x00	; 0
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <vfprintf+0x2f4>
 6ce:	1f 5f       	subi	r17, 0xFF	; 255
 6d0:	80 2e       	mov	r8, r16
 6d2:	99 24       	eor	r9, r9
 6d4:	03 fd       	sbrc	r16, 3
 6d6:	12 c0       	rjmp	.+36     	; 0x6fc <vfprintf+0x320>
 6d8:	00 ff       	sbrs	r16, 0
 6da:	0d c0       	rjmp	.+26     	; 0x6f6 <vfprintf+0x31a>
 6dc:	fd 2c       	mov	r15, r13
 6de:	1e 15       	cp	r17, r14
 6e0:	50 f4       	brcc	.+20     	; 0x6f6 <vfprintf+0x31a>
 6e2:	fe 0c       	add	r15, r14
 6e4:	f1 1a       	sub	r15, r17
 6e6:	1e 2d       	mov	r17, r14
 6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <vfprintf+0x31a>
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	b3 01       	movw	r22, r6
 6f0:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 6f4:	1f 5f       	subi	r17, 0xFF	; 255
 6f6:	1e 15       	cp	r17, r14
 6f8:	c0 f3       	brcs	.-16     	; 0x6ea <vfprintf+0x30e>
 6fa:	04 c0       	rjmp	.+8      	; 0x704 <vfprintf+0x328>
 6fc:	1e 15       	cp	r17, r14
 6fe:	10 f4       	brcc	.+4      	; 0x704 <vfprintf+0x328>
 700:	e1 1a       	sub	r14, r17
 702:	01 c0       	rjmp	.+2      	; 0x706 <vfprintf+0x32a>
 704:	ee 24       	eor	r14, r14
 706:	84 fe       	sbrs	r8, 4
 708:	0f c0       	rjmp	.+30     	; 0x728 <vfprintf+0x34c>
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	b3 01       	movw	r22, r6
 710:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 714:	82 fe       	sbrs	r8, 2
 716:	1f c0       	rjmp	.+62     	; 0x756 <vfprintf+0x37a>
 718:	81 fe       	sbrs	r8, 1
 71a:	03 c0       	rjmp	.+6      	; 0x722 <vfprintf+0x346>
 71c:	88 e5       	ldi	r24, 0x58	; 88
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	10 c0       	rjmp	.+32     	; 0x742 <vfprintf+0x366>
 722:	88 e7       	ldi	r24, 0x78	; 120
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0d c0       	rjmp	.+26     	; 0x742 <vfprintf+0x366>
 728:	c4 01       	movw	r24, r8
 72a:	86 78       	andi	r24, 0x86	; 134
 72c:	90 70       	andi	r25, 0x00	; 0
 72e:	00 97       	sbiw	r24, 0x00	; 0
 730:	91 f0       	breq	.+36     	; 0x756 <vfprintf+0x37a>
 732:	81 fc       	sbrc	r8, 1
 734:	02 c0       	rjmp	.+4      	; 0x73a <vfprintf+0x35e>
 736:	80 e2       	ldi	r24, 0x20	; 32
 738:	01 c0       	rjmp	.+2      	; 0x73c <vfprintf+0x360>
 73a:	8b e2       	ldi	r24, 0x2B	; 43
 73c:	07 fd       	sbrc	r16, 7
 73e:	8d e2       	ldi	r24, 0x2D	; 45
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b3 01       	movw	r22, r6
 744:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 748:	06 c0       	rjmp	.+12     	; 0x756 <vfprintf+0x37a>
 74a:	80 e3       	ldi	r24, 0x30	; 48
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	b3 01       	movw	r22, r6
 750:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 754:	fa 94       	dec	r15
 756:	df 14       	cp	r13, r15
 758:	c0 f3       	brcs	.-16     	; 0x74a <vfprintf+0x36e>
 75a:	da 94       	dec	r13
 75c:	f2 01       	movw	r30, r4
 75e:	ed 0d       	add	r30, r13
 760:	f1 1d       	adc	r31, r1
 762:	80 81       	ld	r24, Z
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	b3 01       	movw	r22, r6
 768:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 76c:	dd 20       	and	r13, r13
 76e:	a9 f7       	brne	.-22     	; 0x75a <vfprintf+0x37e>
 770:	06 c0       	rjmp	.+12     	; 0x77e <vfprintf+0x3a2>
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	b3 01       	movw	r22, r6
 778:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <fputc>
 77c:	ea 94       	dec	r14
 77e:	ee 20       	and	r14, r14
 780:	c1 f7       	brne	.-16     	; 0x772 <vfprintf+0x396>
 782:	40 ce       	rjmp	.-896    	; 0x404 <vfprintf+0x28>
 784:	f3 01       	movw	r30, r6
 786:	86 81       	ldd	r24, Z+6	; 0x06
 788:	97 81       	ldd	r25, Z+7	; 0x07
 78a:	02 c0       	rjmp	.+4      	; 0x790 <vfprintf+0x3b4>
 78c:	8f ef       	ldi	r24, 0xFF	; 255
 78e:	9f ef       	ldi	r25, 0xFF	; 255
 790:	2d 96       	adiw	r28, 0x0d	; 13
 792:	e2 e1       	ldi	r30, 0x12	; 18
 794:	0c 94 88 04 	jmp	0x910	; 0x910 <__epilogue_restores__>

00000798 <strnlen_P>:
 798:	fc 01       	movw	r30, r24
 79a:	05 90       	lpm	r0, Z+
 79c:	61 50       	subi	r22, 0x01	; 1
 79e:	70 40       	sbci	r23, 0x00	; 0
 7a0:	01 10       	cpse	r0, r1
 7a2:	d8 f7       	brcc	.-10     	; 0x79a <strnlen_P+0x2>
 7a4:	80 95       	com	r24
 7a6:	90 95       	com	r25
 7a8:	8e 0f       	add	r24, r30
 7aa:	9f 1f       	adc	r25, r31
 7ac:	08 95       	ret

000007ae <strnlen>:
 7ae:	fc 01       	movw	r30, r24
 7b0:	61 50       	subi	r22, 0x01	; 1
 7b2:	70 40       	sbci	r23, 0x00	; 0
 7b4:	01 90       	ld	r0, Z+
 7b6:	01 10       	cpse	r0, r1
 7b8:	d8 f7       	brcc	.-10     	; 0x7b0 <strnlen+0x2>
 7ba:	80 95       	com	r24
 7bc:	90 95       	com	r25
 7be:	8e 0f       	add	r24, r30
 7c0:	9f 1f       	adc	r25, r31
 7c2:	08 95       	ret

000007c4 <fputc>:
 7c4:	0f 93       	push	r16
 7c6:	1f 93       	push	r17
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	8c 01       	movw	r16, r24
 7ce:	eb 01       	movw	r28, r22
 7d0:	8b 81       	ldd	r24, Y+3	; 0x03
 7d2:	81 ff       	sbrs	r24, 1
 7d4:	1b c0       	rjmp	.+54     	; 0x80c <fputc+0x48>
 7d6:	82 ff       	sbrs	r24, 2
 7d8:	0d c0       	rjmp	.+26     	; 0x7f4 <fputc+0x30>
 7da:	2e 81       	ldd	r18, Y+6	; 0x06
 7dc:	3f 81       	ldd	r19, Y+7	; 0x07
 7de:	8c 81       	ldd	r24, Y+4	; 0x04
 7e0:	9d 81       	ldd	r25, Y+5	; 0x05
 7e2:	28 17       	cp	r18, r24
 7e4:	39 07       	cpc	r19, r25
 7e6:	64 f4       	brge	.+24     	; 0x800 <fputc+0x3c>
 7e8:	e8 81       	ld	r30, Y
 7ea:	f9 81       	ldd	r31, Y+1	; 0x01
 7ec:	01 93       	st	Z+, r16
 7ee:	f9 83       	std	Y+1, r31	; 0x01
 7f0:	e8 83       	st	Y, r30
 7f2:	06 c0       	rjmp	.+12     	; 0x800 <fputc+0x3c>
 7f4:	e8 85       	ldd	r30, Y+8	; 0x08
 7f6:	f9 85       	ldd	r31, Y+9	; 0x09
 7f8:	80 2f       	mov	r24, r16
 7fa:	09 95       	icall
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	31 f4       	brne	.+12     	; 0x80c <fputc+0x48>
 800:	8e 81       	ldd	r24, Y+6	; 0x06
 802:	9f 81       	ldd	r25, Y+7	; 0x07
 804:	01 96       	adiw	r24, 0x01	; 1
 806:	9f 83       	std	Y+7, r25	; 0x07
 808:	8e 83       	std	Y+6, r24	; 0x06
 80a:	02 c0       	rjmp	.+4      	; 0x810 <fputc+0x4c>
 80c:	0f ef       	ldi	r16, 0xFF	; 255
 80e:	1f ef       	ldi	r17, 0xFF	; 255
 810:	c8 01       	movw	r24, r16
 812:	df 91       	pop	r29
 814:	cf 91       	pop	r28
 816:	1f 91       	pop	r17
 818:	0f 91       	pop	r16
 81a:	08 95       	ret

0000081c <__ultoa_invert>:
 81c:	fa 01       	movw	r30, r20
 81e:	aa 27       	eor	r26, r26
 820:	28 30       	cpi	r18, 0x08	; 8
 822:	51 f1       	breq	.+84     	; 0x878 <__ultoa_invert+0x5c>
 824:	20 31       	cpi	r18, 0x10	; 16
 826:	81 f1       	breq	.+96     	; 0x888 <__ultoa_invert+0x6c>
 828:	e8 94       	clt
 82a:	6f 93       	push	r22
 82c:	6e 7f       	andi	r22, 0xFE	; 254
 82e:	6e 5f       	subi	r22, 0xFE	; 254
 830:	7f 4f       	sbci	r23, 0xFF	; 255
 832:	8f 4f       	sbci	r24, 0xFF	; 255
 834:	9f 4f       	sbci	r25, 0xFF	; 255
 836:	af 4f       	sbci	r26, 0xFF	; 255
 838:	b1 e0       	ldi	r27, 0x01	; 1
 83a:	3e d0       	rcall	.+124    	; 0x8b8 <__ultoa_invert+0x9c>
 83c:	b4 e0       	ldi	r27, 0x04	; 4
 83e:	3c d0       	rcall	.+120    	; 0x8b8 <__ultoa_invert+0x9c>
 840:	67 0f       	add	r22, r23
 842:	78 1f       	adc	r23, r24
 844:	89 1f       	adc	r24, r25
 846:	9a 1f       	adc	r25, r26
 848:	a1 1d       	adc	r26, r1
 84a:	68 0f       	add	r22, r24
 84c:	79 1f       	adc	r23, r25
 84e:	8a 1f       	adc	r24, r26
 850:	91 1d       	adc	r25, r1
 852:	a1 1d       	adc	r26, r1
 854:	6a 0f       	add	r22, r26
 856:	71 1d       	adc	r23, r1
 858:	81 1d       	adc	r24, r1
 85a:	91 1d       	adc	r25, r1
 85c:	a1 1d       	adc	r26, r1
 85e:	20 d0       	rcall	.+64     	; 0x8a0 <__ultoa_invert+0x84>
 860:	09 f4       	brne	.+2      	; 0x864 <__ultoa_invert+0x48>
 862:	68 94       	set
 864:	3f 91       	pop	r19
 866:	2a e0       	ldi	r18, 0x0A	; 10
 868:	26 9f       	mul	r18, r22
 86a:	11 24       	eor	r1, r1
 86c:	30 19       	sub	r19, r0
 86e:	30 5d       	subi	r19, 0xD0	; 208
 870:	31 93       	st	Z+, r19
 872:	de f6       	brtc	.-74     	; 0x82a <__ultoa_invert+0xe>
 874:	cf 01       	movw	r24, r30
 876:	08 95       	ret
 878:	46 2f       	mov	r20, r22
 87a:	47 70       	andi	r20, 0x07	; 7
 87c:	40 5d       	subi	r20, 0xD0	; 208
 87e:	41 93       	st	Z+, r20
 880:	b3 e0       	ldi	r27, 0x03	; 3
 882:	0f d0       	rcall	.+30     	; 0x8a2 <__ultoa_invert+0x86>
 884:	c9 f7       	brne	.-14     	; 0x878 <__ultoa_invert+0x5c>
 886:	f6 cf       	rjmp	.-20     	; 0x874 <__ultoa_invert+0x58>
 888:	46 2f       	mov	r20, r22
 88a:	4f 70       	andi	r20, 0x0F	; 15
 88c:	40 5d       	subi	r20, 0xD0	; 208
 88e:	4a 33       	cpi	r20, 0x3A	; 58
 890:	18 f0       	brcs	.+6      	; 0x898 <__ultoa_invert+0x7c>
 892:	49 5d       	subi	r20, 0xD9	; 217
 894:	31 fd       	sbrc	r19, 1
 896:	40 52       	subi	r20, 0x20	; 32
 898:	41 93       	st	Z+, r20
 89a:	02 d0       	rcall	.+4      	; 0x8a0 <__ultoa_invert+0x84>
 89c:	a9 f7       	brne	.-22     	; 0x888 <__ultoa_invert+0x6c>
 89e:	ea cf       	rjmp	.-44     	; 0x874 <__ultoa_invert+0x58>
 8a0:	b4 e0       	ldi	r27, 0x04	; 4
 8a2:	a6 95       	lsr	r26
 8a4:	97 95       	ror	r25
 8a6:	87 95       	ror	r24
 8a8:	77 95       	ror	r23
 8aa:	67 95       	ror	r22
 8ac:	ba 95       	dec	r27
 8ae:	c9 f7       	brne	.-14     	; 0x8a2 <__ultoa_invert+0x86>
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	61 05       	cpc	r22, r1
 8b4:	71 05       	cpc	r23, r1
 8b6:	08 95       	ret
 8b8:	9b 01       	movw	r18, r22
 8ba:	ac 01       	movw	r20, r24
 8bc:	0a 2e       	mov	r0, r26
 8be:	06 94       	lsr	r0
 8c0:	57 95       	ror	r21
 8c2:	47 95       	ror	r20
 8c4:	37 95       	ror	r19
 8c6:	27 95       	ror	r18
 8c8:	ba 95       	dec	r27
 8ca:	c9 f7       	brne	.-14     	; 0x8be <__ultoa_invert+0xa2>
 8cc:	62 0f       	add	r22, r18
 8ce:	73 1f       	adc	r23, r19
 8d0:	84 1f       	adc	r24, r20
 8d2:	95 1f       	adc	r25, r21
 8d4:	a0 1d       	adc	r26, r0
 8d6:	08 95       	ret

000008d8 <__prologue_saves__>:
 8d8:	2f 92       	push	r2
 8da:	3f 92       	push	r3
 8dc:	4f 92       	push	r4
 8de:	5f 92       	push	r5
 8e0:	6f 92       	push	r6
 8e2:	7f 92       	push	r7
 8e4:	8f 92       	push	r8
 8e6:	9f 92       	push	r9
 8e8:	af 92       	push	r10
 8ea:	bf 92       	push	r11
 8ec:	cf 92       	push	r12
 8ee:	df 92       	push	r13
 8f0:	ef 92       	push	r14
 8f2:	ff 92       	push	r15
 8f4:	0f 93       	push	r16
 8f6:	1f 93       	push	r17
 8f8:	cf 93       	push	r28
 8fa:	df 93       	push	r29
 8fc:	cd b7       	in	r28, 0x3d	; 61
 8fe:	de b7       	in	r29, 0x3e	; 62
 900:	ca 1b       	sub	r28, r26
 902:	db 0b       	sbc	r29, r27
 904:	0f b6       	in	r0, 0x3f	; 63
 906:	f8 94       	cli
 908:	de bf       	out	0x3e, r29	; 62
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	cd bf       	out	0x3d, r28	; 61
 90e:	09 94       	ijmp

00000910 <__epilogue_restores__>:
 910:	2a 88       	ldd	r2, Y+18	; 0x12
 912:	39 88       	ldd	r3, Y+17	; 0x11
 914:	48 88       	ldd	r4, Y+16	; 0x10
 916:	5f 84       	ldd	r5, Y+15	; 0x0f
 918:	6e 84       	ldd	r6, Y+14	; 0x0e
 91a:	7d 84       	ldd	r7, Y+13	; 0x0d
 91c:	8c 84       	ldd	r8, Y+12	; 0x0c
 91e:	9b 84       	ldd	r9, Y+11	; 0x0b
 920:	aa 84       	ldd	r10, Y+10	; 0x0a
 922:	b9 84       	ldd	r11, Y+9	; 0x09
 924:	c8 84       	ldd	r12, Y+8	; 0x08
 926:	df 80       	ldd	r13, Y+7	; 0x07
 928:	ee 80       	ldd	r14, Y+6	; 0x06
 92a:	fd 80       	ldd	r15, Y+5	; 0x05
 92c:	0c 81       	ldd	r16, Y+4	; 0x04
 92e:	1b 81       	ldd	r17, Y+3	; 0x03
 930:	aa 81       	ldd	r26, Y+2	; 0x02
 932:	b9 81       	ldd	r27, Y+1	; 0x01
 934:	ce 0f       	add	r28, r30
 936:	d1 1d       	adc	r29, r1
 938:	0f b6       	in	r0, 0x3f	; 63
 93a:	f8 94       	cli
 93c:	de bf       	out	0x3e, r29	; 62
 93e:	0f be       	out	0x3f, r0	; 63
 940:	cd bf       	out	0x3d, r28	; 61
 942:	ed 01       	movw	r28, r26
 944:	08 95       	ret

00000946 <_exit>:
 946:	f8 94       	cli

00000948 <__stop_program>:
 948:	ff cf       	rjmp	.-2      	; 0x948 <__stop_program>
